{
  "$schema" : "https://json-schema.axonivy.com/process/13.1.2/process.json",
  "id" : "1798259395763051",
  "kind" : "HTML_DIALOG",
  "config" : {
    "data" : "com.axonivy.connector.atrust.demo.DocumentSignature.DocumentSignatureData"
  },
  "elements" : [ {
      "id" : "f22",
      "type" : "HtmlDialogMethodStart",
      "name" : "renderTable()",
      "config" : {
        "signature" : "renderTable",
        "guid" : "179825FCCA8D7B69"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 192 },
        "labelOffset" : { "x" : 11, "y" : -21 }
      },
      "connect" : [
        { "id" : "f33", "to" : "f32" }
      ]
    }, {
      "id" : "f27",
      "type" : "HtmlDialogMethodStart",
      "name" : "upload(FileUploadEvent)",
      "config" : {
        "signature" : "upload",
        "input" : {
          "params" : [
            { "name" : "event", "type" : "org.primefaces.event.FileUploadEvent", "desc" : "" }
          ],
          "map" : {
            "out.uploadedFile" : "param.event.getFile()"
          }
        },
        "guid" : "179825FCCA8A85E1"
      },
      "visual" : {
        "at" : { "x" : 512, "y" : 192 },
        "labelOffset" : { "x" : 11, "y" : -21 }
      },
      "connect" : [
        { "id" : "f41", "to" : "f40" }
      ]
    }, {
      "id" : "f10",
      "type" : "Script",
      "name" : [
        "Prepare Input of A-Trust call",
        "Input: SignatureJob"
      ],
      "config" : {
        "output" : {
          "code" : [
            "import org.apache.commons.lang3.StringUtils;",
            "import ch.ivyteam.ivy.workflow.document.IDocument;",
            "import java.nio.file.Files;",
            "import java.nio.file.Path;",
            "//Get first doc from case",
            "IDocument document = ivy.case.documents().getAll().get(0);",
            "Path path = document.read().asJavaFile().toPath();",
            "// Prepare data for Signature job",
            "in.signatureJob.taskId = ivy.task.getId();",
            "in.signatureJob.documentName = document.getName();",
            "in.signatureJob.pdfDocument = Files.readAllBytes(path);",
            "if (in.selectedTemplate.id != 0) {",
            "  in.signatureJob.signTemplateId = in.selectedTemplate.id;",
            "}"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 288, "y" : 864 },
        "size" : { "width" : 176 }
      },
      "connect" : [
        { "id" : "f45", "to" : "f13" }
      ]
    }, {
      "id" : "f12",
      "type" : "ProcessAnnotation",
      "name" : [
        "**How to integrate",
        "- Add a Call element to your process. It calls to ATrust/StartSignature process with start method is call(SignatureJob).",
        "- Prepare data for  SignatureJob  object:",
        "\t// Example data for Signature job",
        "\tSignatureJob signatureJob = new SignatureJob();",
        "\tsignatureJob.taskId = ivy.task.getId(); // Current request task id",
        "\tsignatureJob.documentName; // Document name",
        "\tsignatureJob.callbackUrlAfterSignature; // Call back url after signature, if leave with empty, the default callback url will be called",
        "\tin.signatureJob.location = \"Austria\"; // User location",
        "\tin.signatureJob.reason = \"Sign new doc\"; // Reason for this sign session",
        "\tin.signatureJob.pdfDocument;",
        "\tin.signatureJob.signStampCoordinatesX0",
        "\tin.signatureJob.signStampCoordinatesX1",
        "\tin.signatureJob.signStampCoordinatesY0",
        "\tin.signatureJob.signStampCoordinatesY1 = 14.4; // example for postion of stamp\t",
        "\tin.signatureJob.signStampPageNumber;",
        "",
        "- The return object is  SignatureDocumentData.",
        "- After success, a document will be added to this case with the prefix \"SIGNED_\" if the doc is signed.",
        "",
        "**DEPRECATED",
        "- ATrust/StartSignature/call(SignatureJob) method"
      ],
      "visual" : {
        "at" : { "x" : 440, "y" : 1183 },
        "size" : { "width" : 776, "height" : 413 },
        "color" : "NodeStyle4"
      }
    }, {
      "id" : "f19",
      "type" : "ProcessAnnotation",
      "name" : [
        "**Integration",
        "",
        "UPDATE A-TRUST VARS IN VARIABLE of A-TRUST-CONNECTOR project:",
        "- ATrust.APIKey: API Key for A-Trust Handysignatur api",
        "- ATrust.ServerUrl: The Server URL under which the SigBox Server is reachable",
        "- ATrust.SignBox: The SignBox belong to your ATrust server",
        "- ATrust.TemplateId : The default signature template ID to be used",
        "** DEPREPCATED ",
        "- ATrust.EndpointUri : Please use ATrust.ServerUrl"
      ],
      "visual" : {
        "at" : { "x" : 312, "y" : 656 },
        "size" : { "width" : 520, "height" : 148 },
        "color" : "NodeStyle4"
      }
    }, {
      "id" : "f38",
      "type" : "Script",
      "name" : "Download selected doc",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.jsf.primefaces.stream.InputStreamSupplier;",
            "import java.nio.file.Files;",
            "import org.primefaces.model.DefaultStreamedContent;",
            "import java.io.InputStream;",
            "",
            "//Get content type",
            "String contentType = Files.probeContentType(in.selectedDocument.read().asJavaFile().toPath());",
            "",
            "//Read doc as stream content",
            "InputStream inputStream = ivy.case.documents().get(in.selectedDocument.uuid()).read().asStream();",
            "in.streamedContent = DefaultStreamedContent.builder().stream(InputStreamSupplier.stream(inputStream)).contentType(contentType).name(in.selectedDocument.getName()).build();"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 232, "y" : 448 },
        "size" : { "width" : 120 }
      },
      "connect" : [
        { "id" : "f24", "to" : "f11" }
      ]
    }, {
      "id" : "f9",
      "type" : "HtmlDialogMethodStart",
      "name" : "sign()",
      "config" : {
        "signature" : "sign",
        "input" : {
          "map" : {
            "out.signatureJob.isEmbeddedInframe" : "false"
          }
        },
        "guid" : "179825FCCA8B2961"
      },
      "visual" : {
        "at" : { "x" : 112, "y" : 864 },
        "labelOffset" : { "x" : 7, "y" : 35 }
      },
      "connect" : [
        { "id" : "f67", "to" : "f10" }
      ]
    }, {
      "id" : "f42",
      "type" : "Alternative",
      "name" : "exist?",
      "config" : {
        "conditions" : {
          "f17" : "in.doesDocumentExist"
        }
      },
      "visual" : {
        "at" : { "x" : 800, "y" : 192 },
        "labelOffset" : { "y" : -16 }
      },
      "connect" : [
        { "id" : "f17", "to" : "f5" },
        { "id" : "f48", "to" : "f34" }
      ]
    }, {
      "id" : "f34",
      "type" : "Script",
      "name" : "Add file to case",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.connector.atrust.util.IvyUtils;",
            "import javax.faces.context.FacesContext;",
            "import javax.faces.application.FacesMessage;",
            "",
            "in.uploadedDocumentName = in.uploadedFile.getFileName();",
            "//Add the new file to case",
            "ivy.case.documents().add(in.uploadedFile.getFileName()).write().withContentFrom(in.uploadedFile.getInputStream());",
            "in.disableSignButton = false;",
            "",
            "//Update message",
            "String successMessage = IvyUtils.getCMSTranslation(\"/Dialogs/com/axonivy/connector/atrust/demo/DocumentSignature/UploadDocumentSuccessfully\", in.uploadedFile.getFileName(), ivy.case.getId());",
            "FacesMessage message = new FacesMessage(successMessage);",
            "FacesContext.getCurrentInstance().addMessage(null, message);"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 800, "y" : 280 }
      },
      "boundaries" : [ {
          "id" : "f16",
          "type" : "ErrorBoundaryEvent",
          "config" : {
            "output" : {
              "code" : [
                "import javax.faces.context.FacesContext;",
                "import javax.faces.application.FacesMessage;",
                "",
                "//Update message",
                "FacesMessage message = new FacesMessage(String.format(\"Upload file %s to case failed: %s\", in.uploadedFile.getFileName(), error.getLocalizedMessage()));",
                "message.severity = FacesMessage.SEVERITY_ERROR;",
                "FacesContext.getCurrentInstance().addMessage(\"form:upload-message\", message);"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 840, "y" : 314 }
          },
          "connect" : [
            { "id" : "f47", "to" : "f5", "via" : [ { "x" : 992, "y" : 312 } ] }
          ]
        } ],
      "connect" : [
        { "id" : "f50", "to" : "f78" }
      ]
    }, {
      "id" : "f6",
      "type" : "HtmlDialogStart",
      "name" : "start()",
      "config" : {
        "signature" : "start",
        "guid" : "179825FCCA8E48E3"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 112 },
        "labelOffset" : { "x" : 19, "y" : -21 }
      },
      "connect" : [
        { "id" : "f64", "to" : "f62" }
      ]
    }, {
      "id" : "f13",
      "type" : "SubProcessCall",
      "name" : [
        "Call A-Trust to StartSignature",
        "Input: SignatureJob",
        "Output: SignatureDocumentData"
      ],
      "config" : {
        "processCall" : "ATrust/StartSignature:createSignBatch(com.axonivy.connector.atrust.bo.SignatureJob)",
        "call" : {
          "map" : {
            "param.signatureJob" : "in.signatureJob"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.handySignatureURL" : "result.handySignatureURL",
            "out.signatureDocumentData" : "result.signatureDocumentData"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 552, "y" : 864 },
        "size" : { "width" : 224, "height" : 86 },
        "icon" : "res:/webContent/icons/atrust-icon.png"
      },
      "connect" : [
        { "id" : "f26", "to" : "f83" }
      ]
    }, {
      "id" : "f7",
      "type" : "ProcessAnnotation",
      "name" : "Get first doc in current case",
      "visual" : {
        "at" : { "x" : 240, "y" : 928 },
        "size" : { "width" : 160, "height" : 30 }
      },
      "connect" : [
        { "id" : "f0", "to" : "f10" }
      ]
    }, {
      "id" : "f18",
      "type" : "ProcessAnnotation",
      "name" : "*** YOUR PROCESS ***",
      "visual" : {
        "at" : { "x" : 552, "y" : 30 },
        "size" : { "width" : 1105 }
      }
    }, {
      "id" : "f11",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 336, "y" : 448 }
      }
    }, {
      "id" : "f25",
      "type" : "HtmlDialogMethodStart",
      "name" : "download(IDocument)",
      "config" : {
        "signature" : "download",
        "input" : {
          "params" : [
            { "name" : "document", "type" : "ch.ivyteam.ivy.workflow.document.IDocument", "desc" : "" }
          ],
          "map" : {
            "out.selectedDocument" : "param.document"
          }
        },
        "result" : {
          "params" : [
            { "name" : "streamContent", "type" : "org.primefaces.model.StreamedContent", "desc" : "" }
          ],
          "map" : {
            "result.streamContent" : "in.streamedContent"
          }
        },
        "guid" : "179825FCCA9E1AF5"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 448 },
        "labelOffset" : { "x" : -5, "y" : -21 }
      },
      "connect" : [
        { "id" : "f39", "to" : "f38" }
      ]
    }, {
      "id" : "f40",
      "type" : "Script",
      "name" : "Validation",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.connector.atrust.util.IvyUtils;",
            "import javax.faces.context.FacesContext;",
            "import javax.faces.application.FacesMessage;",
            "import ch.ivyteam.ivy.workflow.document.Path;",
            "",
            "//Find doc in case by name",
            "String fileName = in.uploadedFile.getFileName();",
            "in.doesDocumentExist = ivy.case.documents().get(new Path(fileName)) != null;",
            "",
            "if (in.doesDocumentExist) {",
            "  //Update message",
            "  String duplictedMessage = IvyUtils.getCMSTranslation(\"/Dialogs/com/axonivy/connector/atrust/demo/DocumentSignature/DuplicatedDocument\", fileName);",
            "  FacesMessage message = new FacesMessage(duplictedMessage);",
            "  message.setSeverity(FacesMessage.SEVERITY_ERROR);",
            "  FacesContext.getCurrentInstance().addMessage(null, message);",
            "}"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 648, "y" : 192 }
      },
      "connect" : [
        { "id" : "f43", "to" : "f42" }
      ]
    }, {
      "id" : "f14",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 336, "y" : 112 }
      }
    }, {
      "id" : "f30",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 928, "y" : 864 }
      }
    }, {
      "id" : "f32",
      "type" : "Script",
      "name" : "Get all docs in case",
      "config" : {
        "output" : {
          "code" : "in.documents = ivy.case.documents().getAll();"
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 216, "y" : 192 }
      },
      "connect" : [
        { "id" : "f4", "to" : "f3" }
      ]
    }, {
      "id" : "f3",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 336, "y" : 192 }
      }
    }, {
      "id" : "f5",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 992, "y" : 192 }
      }
    }, {
      "id" : "f56",
      "type" : "HtmlDialogMethodStart",
      "name" : "getListTemplate()",
      "config" : {
        "signature" : "getListTemplate",
        "guid" : "19173027AFF905B6"
      },
      "visual" : {
        "at" : { "x" : 512, "y" : 112 },
        "labelOffset" : { "x" : 11, "y" : -21 }
      },
      "connect" : [
        { "id" : "f66", "to" : "f63" }
      ]
    }, {
      "id" : "f57",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 912, "y" : 112 }
      }
    }, {
      "id" : "f63",
      "type" : "SubProcessCall",
      "name" : [
        "ATrust/TemplateManagement",
        "GetListTemplate()"
      ],
      "config" : {
        "processCall" : "ATrust/TemplateManagement:GetListTemplate()",
        "output" : {
          "map" : {
            "out" : "in",
            "out.templateData" : "result.templates"
          },
          "code" : [
            "import at.a.trust.rest.api.client.TemplateMeta;",
            "if (in.signatureJob.signTemplateId != 0) {",
            "  for (TemplateMeta template : out.templateData.templateList) {",
            "    if (template.id == in.signatureJob.signTemplateId) {",
            "      in.selectedTemplate = template;",
            "    }",
            "  }",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 672, "y" : 112 },
        "size" : { "width" : 160 },
        "icon" : "res:/webContent/icons/atrust-icon.png"
      },
      "connect" : [
        { "id" : "f58", "to" : "f57" }
      ]
    }, {
      "id" : "f1",
      "type" : "HtmlDialogMethodStart",
      "name" : "completeTemplate(String)",
      "config" : {
        "signature" : "completeTemplate",
        "input" : {
          "params" : [
            { "name" : "query", "type" : "String", "desc" : "" }
          ],
          "map" : { },
          "code" : [
            "import org.apache.commons.lang3.StringUtils;",
            "import at.a.trust.rest.api.client.TemplateMeta;",
            "out.templates.clear();",
            "for (TemplateMeta meta : out.templateData.templateList) {",
            "  if (StringUtils.containsIgnoreCase(meta.description, param.query) || StringUtils.containsIgnoreCase(String.valueOf(meta.id), param.query)) {",
            "    out.templates.add(meta);",
            "  }",
            "}"
          ]
        },
        "result" : {
          "params" : [
            { "name" : "templates", "type" : "java.util.List<at.a.trust.rest.api.client.TemplateMeta>", "desc" : "" }
          ],
          "map" : {
            "result.templates" : "in.templates"
          }
        },
        "guid" : "19174142E323D054"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 272 },
        "labelOffset" : { "x" : -5, "y" : -21 }
      },
      "connect" : [
        { "id" : "f8", "to" : "f2" }
      ]
    }, {
      "id" : "f2",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 240, "y" : 272 }
      }
    }, {
      "id" : "f15",
      "type" : "HtmlDialogMethodStart",
      "name" : "getTemplateDisplayName(TemplateMeta)",
      "config" : {
        "signature" : "getTemplateDisplayName",
        "input" : {
          "params" : [
            { "name" : "template", "type" : "at.a.trust.rest.api.client.TemplateMeta", "desc" : "" }
          ],
          "map" : {
            "out.selectedTemplate" : "param.template"
          }
        },
        "result" : {
          "params" : [
            { "name" : "displayName", "type" : "String", "desc" : "" }
          ],
          "map" : { },
          "code" : [
            "import com.axonivy.connector.atrust.constant.Constants;",
            "if (in.#selectedTemplate is initialized && in.#selectedTemplate.#id is initialized) {",
            "  result.displayName = String.format(Constants.TEMPLATE_DISPLAY_NAME_PATTERN, in.selectedTemplate.description, in.selectedTemplate.id); ",
            "} else {",
            "  result.displayName = \"\";",
            "}"
          ]
        },
        "guid" : "1917445EF39C34C7"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 352 },
        "labelOffset" : { "x" : 43, "y" : -21 }
      },
      "connect" : [
        { "id" : "f59", "to" : "f46" }
      ]
    }, {
      "id" : "f46",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 240, "y" : 352 }
      }
    }, {
      "id" : "f62",
      "type" : "Script",
      "name" : "Init",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.connector.atrust.util.IvyUtils;",
            "import com.axonivy.connector.atrust.enums.ATrustCustomField;",
            "import com.axonivy.connector.atrust.enums.SignatureStatus;",
            "import com.axonivy.connector.atrust.bo.SignatureDocumentData;",
            "import ch.ivyteam.ivy.workflow.document.IDocument;",
            "import org.apache.commons.collections4.CollectionUtils;",
            "import com.axonivy.connector.atrust.bo.SignatureJob;",
            "",
            "String signatureDocumentDataId = ivy.task.customFields().stringField(ATrustCustomField.SIGNATURE_DOCUMENT_DATA_ID.getKey()).getOrNull();",
            "in.signatureDocumentData = IvyUtils.queryRepoById(signatureDocumentDataId, SignatureDocumentData.class) as SignatureDocumentData;",
            "in.isSignFinished = SignatureStatus.SIGNED == in.signatureDocumentData.#signatureStatus;",
            "",
            "List<IDocument> caseDocs = ivy.case.documents().getAll();",
            "in.uploadedDocumentName = CollectionUtils.isEmpty(caseDocs) ? \"\" : caseDocs.get(0).getName();",
            "String inputtedDataId = ivy.task.customFields().stringField(ATrustCustomField.SIGNATURE_JOB_ID.getKey()).getOrDefault(\"\");",
            "in.signatureJob = IvyUtils.queryRepoById(inputtedDataId, SignatureJob.class) as SignatureJob;"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 216, "y" : 112 }
      },
      "connect" : [
        { "id" : "f21", "to" : "f14" }
      ]
    }, {
      "id" : "f49",
      "type" : "HtmlDialogMethodStart",
      "name" : "close()",
      "config" : {
        "signature" : "close",
        "guid" : "1917977930E4BBB1"
      },
      "visual" : {
        "at" : { "x" : 96, "y" : 528 },
        "labelOffset" : { "x" : 11, "y" : -21 }
      },
      "connect" : [
        { "id" : "f69", "to" : "f61" }
      ]
    }, {
      "id" : "f61",
      "type" : "HtmlDialogExit",
      "visual" : {
        "at" : { "x" : 240, "y" : 528 }
      }
    }, {
      "id" : "f74",
      "type" : "ProcessAnnotation",
      "name" : "Refresh the SignatureJob on UI form was change",
      "visual" : {
        "at" : { "x" : 600, "y" : 328 },
        "size" : { "width" : 272, "height" : 40 }
      },
      "connect" : [
        { "id" : "f75", "to" : "f78" }
      ]
    }, {
      "id" : "f76",
      "type" : "HtmlDialogMethodStart",
      "name" : "onDataChange()",
      "config" : {
        "signature" : "onDataChange",
        "input" : {
          "map" : {
            "out.signatureJob.isEmbeddedInframe" : "true"
          }
        },
        "guid" : "199E76E7BBE46107"
      },
      "visual" : {
        "at" : { "x" : 512, "y" : 400 },
        "labelOffset" : { "x" : 11, "y" : -21 }
      },
      "connect" : [
        { "id" : "f77", "to" : "f78" }
      ]
    }, {
      "id" : "f78",
      "type" : "Script",
      "name" : "Rebuild SignatureJob data",
      "config" : {
        "output" : {
          "code" : [
            "import org.apache.commons.lang3.StringUtils;",
            "import ch.ivyteam.ivy.workflow.document.IDocument;",
            "import java.nio.file.Files;",
            "import java.nio.file.Path;",
            "//Get first doc from case",
            "if (!ivy.case.documents().getAll().isEmpty()) {",
            "  IDocument document = ivy.case.documents().getAll().get(0);",
            "  Path path = document.read().asJavaFile().toPath();",
            "  in.signatureJob.documentName = document.getName();",
            "  in.signatureJob.pdfDocument = Files.readAllBytes(path);",
            "}",
            "",
            "// Prepare data for Signature job",
            "in.signatureJob.taskId = ivy.task.getId();",
            "if (in.selectedTemplate.id != 0) {",
            "  in.signatureJob.signTemplateId = in.selectedTemplate.id;",
            "}"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 800, "y" : 400 },
        "size" : { "width" : 176 }
      },
      "connect" : [
        { "id" : "f80", "to" : "f79" }
      ]
    }, {
      "id" : "f79",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 992, "y" : 400 }
      }
    }, {
      "id" : "f81",
      "type" : "ProcessAnnotation",
      "name" : [
        "**Sign in A-Trust webapp",
        "This action will reset current task and redirect user to A-Trust webapp"
      ],
      "visual" : {
        "at" : { "x" : 184, "y" : 792 },
        "size" : { "width" : 270, "height" : 54 }
      },
      "connect" : [
        { "id" : "f82", "to" : "f9" }
      ]
    }, {
      "id" : "f83",
      "type" : "Alternative",
      "name" : "is success?",
      "config" : {
        "conditions" : {
          "f87" : "in.signatureDocumentData.signatureStatus == com.axonivy.connector.atrust.enums.SignatureStatus.FAILED",
          "f84" : ""
        }
      },
      "visual" : {
        "at" : { "x" : 736, "y" : 864 }
      },
      "connect" : [
        { "id" : "f84", "to" : "f30", "label" : {
            "name" : "yes",
            "offset" : { "y" : -10 }
          }, "color" : "default" },
        { "id" : "f87", "to" : "f85", "via" : [ { "x" : 736, "y" : 776 } ], "label" : {
            "name" : "no",
            "segment" : 1.5,
            "offset" : { "x" : -35, "y" : 30 }
          } }
      ]
    }, {
      "id" : "f85",
      "type" : "Script",
      "name" : "Show error",
      "config" : {
        "output" : {
          "code" : [
            "import javax.faces.context.FacesContext;",
            "import javax.faces.application.FacesMessage;",
            "FacesMessage message = new FacesMessage();",
            "message.severity = FacesMessage.SEVERITY_ERROR;",
            "message.detail = in.signatureDocumentData.lastSignatureError;",
            "message.summary = in.signatureDocumentData.signatureStatus.name();",
            "FacesContext.getCurrentInstance().addMessage(null, message);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 832, "y" : 776 }
      },
      "connect" : [
        { "id" : "f86", "to" : "f30", "via" : [ { "x" : 928, "y" : 776 } ] }
      ]
    }, {
      "id" : "f88",
      "type" : "HtmlDialogMethodStart",
      "name" : "onSignFinished()",
      "config" : {
        "signature" : "onSignFinished",
        "guid" : "199ECAFC71B74585"
      },
      "visual" : {
        "at" : { "x" : 512, "y" : 512 }
      },
      "connect" : [
        { "id" : "f90", "to" : "f91" }
      ]
    }, {
      "id" : "f89",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 768, "y" : 512 }
      }
    }, {
      "id" : "f91",
      "type" : "Script",
      "name" : "Check Sign status",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.connector.atrust.enums.SignatureStatus;",
            "import com.axonivy.connector.atrust.bo.SignatureDocumentData;",
            "import com.axonivy.connector.atrust.util.IvyUtils;",
            "import com.axonivy.connector.atrust.enums.ATrustCustomField;",
            "",
            "String dataId = ivy.task.customFields().stringField(ATrustCustomField.SIGNATURE_DOCUMENT_DATA_ID.getKey()).getOrNull();",
            "in.signatureDocumentData = IvyUtils.queryRepoById(dataId, SignatureDocumentData.class) as SignatureDocumentData;",
            "in.isSignFinished = in.signatureDocumentData.signatureStatus == SignatureStatus.SIGNED;"
          ]
        },
        "sudo" : true
      },
      "visual" : {
        "at" : { "x" : 640, "y" : 512 },
        "icon" : "res:/webContent/icons/atrust-icon.png"
      },
      "connect" : [
        { "id" : "f92", "to" : "f89", "color" : "default" }
      ]
    } ],
  "layout" : {
    "lanes" : [ {
        "name" : "Example to integrate in your process",
        "offset" : 560,
        "size" : 872,
        "lanes" : [ ]
      } ],
    "colors" : {
      "NodeStyle4" : "rgb(0, 128, 0)"
    }
  }
}